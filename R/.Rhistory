pr2 = fread("~/Desktop/18S/pr2_taxonomy.csv") %>% dplyr::mutate(feature_id = openssl::md5(feature_id))
silva = fread("~/Desktop/18S/silva_taxonomy.csv") %>% dplyr::mutate(feature_id = openssl::md5(feature_id))
df_list = list(silva ),
df_list = list(silva,
blastn,
pr2)
ranks = tolower(ranks)
for (i in 1:length(df_list)) {
colnames(df_list[[i]]) = colnames(df_list[[i]]) %>% tolower()
colnames(df_list[[i]])[1] = "feature_id"
df_list[[i]] = taxo_normalisation(obj = df_list[[i]], sqlFile = sqlFile, ranks = ranks, keepSAR = keepSAR)
df_list[[i]] = df_list[[i]] %>%
dplyr::mutate(df=as.character(i)) %>%
mutate_all(funs(na_if(., "Unknown")))
}
dfall = data.table::rbindlist(df_list)
dfall$nRb = rowSums(is.na(dfall[,..ranks] ) | dfall[,..ranks] == "")
dfall <- dfall %>% mutate_all(na_if,"")
dfall = dfall[!nRb==length(ranks),]
newdf = data.frame(matrix(nrow=dfall$feature_id %>% unique() %>% length(), ncol = length(ranks)+1))
colnames(newdf) = c("feature_id",ranks)
newdf$feature_id = dfall$feature_id %>% unique()
i=1
temp = dfall %>% dplyr::filter(feature_id == newdf$feature_id[i])
View(temp)
if(temp$df %>% unique() %>% length() >1){
x = temp %>% summarise(across(where(is.character), n_distinct,na.rm = T)) %>% dplyr::select(-c(feature_id,df))
while (!all(x %in% c(0,1))) {
r = min(which(apply(temp, 2, function(x) length(unique(x[!is.na(x)]))) > 1))
if(which.max(table(temp[,..r])) > nrow(temp)/2){
temp = temp[which(temp[,..r] == names(which.max(table(temp[,..r])))),]
x = temp %>% summarise(across(where(is.character), n_distinct,na.rm = T)) %>% dplyr::select(-c(feature_id,df))
}else{
temp[,r:which(colnames(temp)==tail(ranks,1))] = NA
x = temp %>% summarise(across(where(is.character), n_distinct,na.rm = T)) %>% dplyr::select(-c(feature_id,df))
}
}
newdf[i,1:(length(ranks)+1)] = temp[which.min(temp$nRb),1:(length(ranks)+1)]
}else{
newdf[i,1:(length(ranks)+1)] = temp[which.min(temp$nRb),1:(length(ranks)+1)]
}
temp[which.min(temp$nRb),1:(length(ranks)+1
]
temp[which.min(temp$nRb),1:(length(ranks)+1)]
i=2
temp = dfall %>% dplyr::filter(feature_id == newdf$feature_id[i])
if(temp$df %>% unique() %>% length() >1){
x = temp %>% summarise(across(where(is.character), n_distinct,na.rm = T)) %>% dplyr::select(-c(feature_id,df))
while (!all(x %in% c(0,1))) {
r = min(which(apply(temp, 2, function(x) length(unique(x[!is.na(x)]))) > 1))
if(which.max(table(temp[,..r])) > nrow(temp)/2){
temp = temp[which(temp[,..r] == names(which.max(table(temp[,..r])))),]
x = temp %>% summarise(across(where(is.character), n_distinct,na.rm = T)) %>% dplyr::select(-c(feature_id,df))
}else{
temp[,r:which(colnames(temp)==tail(ranks,1))] = NA
x = temp %>% summarise(across(where(is.character), n_distinct,na.rm = T)) %>% dplyr::select(-c(feature_id,df))
}
}
newdf[i,1:(length(ranks)+1)] = temp[which.min(temp$nRb),1:(length(ranks)+1)]
}else{
newdf[i,1:(length(ranks)+1)] = temp[which.min(temp$nRb),1:(length(ranks)+1)]
}
temp[which.min(temp$nRb),1:(length(ranks)+1)]
i=3
temp = dfall %>% dplyr::filter(feature_id == newdf$feature_id[i])
if(temp$df %>% unique() %>% length() >1){
x = temp %>% summarise(across(where(is.character), n_distinct,na.rm = T)) %>% dplyr::select(-c(feature_id,df))
while (!all(x %in% c(0,1))) {
r = min(which(apply(temp, 2, function(x) length(unique(x[!is.na(x)]))) > 1))
if(which.max(table(temp[,..r])) > nrow(temp)/2){
temp = temp[which(temp[,..r] == names(which.max(table(temp[,..r])))),]
x = temp %>% summarise(across(where(is.character), n_distinct,na.rm = T)) %>% dplyr::select(-c(feature_id,df))
}else{
temp[,r:which(colnames(temp)==tail(ranks,1))] = NA
x = temp %>% summarise(across(where(is.character), n_distinct,na.rm = T)) %>% dplyr::select(-c(feature_id,df))
}
}
newdf[i,1:(length(ranks)+1)] = temp[which.min(temp$nRb),1:(length(ranks)+1)]
}else{
newdf[i,1:(length(ranks)+1)] = temp[which.min(temp$nRb),1:(length(ranks)+1)]
}
temp[which.min(temp$nRb),1:(length(ranks)+1)]
View(dfall)
i=34
taxo_assingment_summary = function(df, ranks){
df = df %>% as.data.table()
df$nRb = rowSums(is.na(df[,..ranks] ) | df[,..ranks] == "")
temp_summary = df %>% dplyr::summarise(mean = round(mean(nRb),2), sd = round(sd(nRb),2))
cat("\nMean assigned taxonomic ranks: ",temp_summary$mean %>% as.numeric(),"\nStandard deviation: ",temp_summary$sd %>% as.numeric(),"\n\n")
}
consensus_taxo %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
write.csv(x = consensus_taxo, file = "/Users/olivierlaroche/Library/CloudStorage/OneDrive-Cawthron/TMC/Gabby/18S/consensus>taxonomy.csv",row.names = F)
write.csv(x = consensus_taxo, file = "/Users/olivierlaroche/Library/CloudStorage/OneDrive-Cawthron/TMC/Gabby/18S/consensus_taxonomy.csv",row.names = F)
write.csv(x = consensus_taxo, file = "/Users/olivierlaroche/Library/CloudStorage/OneDrive-Cawthron/TMC/Gabby/18S/consensus_taxonomy.csv",row.names = F)
taxo_assingment_summary = function(df, ranks){
df = df %>% as.data.table()
df$nRb = rowSums(is.na(df[,..ranks] ) | df[,..ranks] == "")
temp_summary = df %>% dplyr::summarise(mean = round(mean(nRb),2), sd = round(sd(nRb),2))
cat("\nMean assigned taxonomic ranks: ",temp_summary$mean %>% as.numeric(),"\nStandard deviation: ",temp_summary$sd %>% as.numeric(),"\n\n")
}
insect = fread("~/Desktop/COI/taxo_insect.csv") #%>% dplyr::mutate(feature_id = openssl::md5(feature_id))
View(insect)
colnames(insect)
insect = fread("~/Desktop/COI/taxo_insect.csv") %>% dplyr::select(-c(taxID,taxon,rank,score))
View(insect)
blastn = fread("~/Desktop/COI/blastn_taxo_assingment_v2.csv")
blastn = fread("~/Desktop/COI/blastn_taxo_assingment.csv")
View(blastn)
blastn2 = fread("~/Desktop/COI/blastn_taxo_assingment_v2.csv")
View(blastn2)
blastn = fread("~/Desktop/COI/blastn_taxo_assingment_v2.csv")
insect %>% taxo_assingment_summary(ranks = c("Kingdom", "Supergroup", "Division", "Class", "Order", "Family", "Genus", "Species"))
insect %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastn %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
consensus_taxo = taxo_merge_v2(
df_list = list(insect,
blastn),
sqlFile = "/Users/olivierlaroche/Dropbox/R_scripts_N_bioinfo/Building_packages/accessionTaxa.sql",
ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"),
keepSAR = F)
taxo_merge_v2 = function(
df_list,
sqlFile,
ranks,
keepSAR = F)
{
ranks = tolower(ranks)
for (i in 1:length(df_list)) {
colnames(df_list[[i]]) = colnames(df_list[[i]]) %>% tolower()
colnames(df_list[[i]])[1] = "feature_id"
df_list[[i]] = taxo_normalisation(obj = df_list[[i]], sqlFile = sqlFile, ranks = ranks, keepSAR = keepSAR)
df_list[[i]] = df_list[[i]] %>%
dplyr::mutate(df=as.character(i)) %>%
mutate_all(funs(na_if(., "Unknown")))
}
dfall = data.table::rbindlist(df_list)
dfall$nRb = rowSums(is.na(dfall[,..ranks] ) | dfall[,..ranks] == "")
dfall <- dfall %>% mutate_all(na_if,"")
dfall = dfall[!nRb==length(ranks),]
newdf = data.frame(matrix(nrow=dfall$feature_id %>% unique() %>% length(), ncol = length(ranks)+1))
colnames(newdf) = c("feature_id",ranks)
newdf$feature_id = dfall$feature_id %>% unique()
pb = txtProgressBar(min = 0, max = nrow(newdf), initial = 0,  style = 3)
for (i in 1:nrow(newdf)) {
temp = dfall %>% dplyr::filter(feature_id == newdf$feature_id[i])
if(temp$df %>% unique() %>% length() >1){
x = temp %>% summarise(across(where(is.character), n_distinct,na.rm = T)) %>% dplyr::select(-c(feature_id,df))
while (!all(x %in% c(0,1))) {
r = min(which(apply(temp, 2, function(x) length(unique(x[!is.na(x)]))) > 1))
if(which.max(table(temp[,..r])) > nrow(temp)/2){
temp = temp[which(temp[,..r] == names(which.max(table(temp[,..r])))),]
x = temp %>% summarise(across(where(is.character), n_distinct,na.rm = T)) %>% dplyr::select(-c(feature_id,df))
}else{
temp[,r:which(colnames(temp)==tail(ranks,1))] = NA
x = temp %>% summarise(across(where(is.character), n_distinct,na.rm = T)) %>% dplyr::select(-c(feature_id,df))
}
}
newdf[i,1:(length(ranks)+1)] = temp[which.min(temp$nRb),1:(length(ranks)+1)]
}else{
newdf[i,1:(length(ranks)+1)] = temp[which.min(temp$nRb),1:(length(ranks)+1)]
}
setTxtProgressBar(pb,i)
close(pb)
}
newdf$nRb = rowSums(!is.na(newdf[,ranks] ) & newdf[,ranks] != "")
temp_summary = newdf %>% dplyr::summarise(mean = round(mean(nRb),2), sd = round(sd(nRb),2))
cat("\nMean assigned taxonomic ranks: ",temp_summary$mean %>% as.numeric(),"\nStandard deviation: ",temp_summary$sd %>% as.numeric(),"\n\n")
return(newdf %>% dplyr::select(-nRb))
}
consensus_taxo = taxo_merge_v2(
df_list = list(insect,
blastn),
sqlFile = "/Users/olivierlaroche/Dropbox/R_scripts_N_bioinfo/Building_packages/accessionTaxa.sql",
ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"),
keepSAR = F)
View(taxo_normalisation())
View(taxo_normalisation)
taxo_normalisation = function(obj, sqlFile, ranks, keepSAR = F){
if("phyloseq" %in% class(obj)){
df = obj@tax_table@.Data %>% as.data.frame()
} else{
df = obj %>% as.data.frame()
}
ranks = tolower(ranks)
colnames(df) = tolower(colnames(df))
taxa_id = c("otu","otus","asv","asvs","feature_id","feature.id","nR")
if("taxon" %in% colnames(df)){
df$taxon = gsub("D_\\d+__","",taxo$taxon)
df = df %>% dplyr::select(c(colnames(df)[which(colnames(df)%in%c(taxa_id,"taxon"))])) %>% splitstackshape::cSplit('taxon', sep = ';')
}else if("taxonomy" %in% colnames(df)){
df = df %>% dplyr::select(c(colnames(df)[which(colnames(df)%in%c(taxa_id,"taxonomy"))])) %>% splitstackshape::cSplit('taxonomy', sep = ';')
}
df = df %>% mutate_if(is.factor, as.character)
df[is.na(df)]<-""
if(any(taxa_id %in% colnames(df))){
taxa_id_df = which(colnames(df) %in% taxa_id)%>% as.numeric()
colnames(df)[taxa_id_df] = "feature_id"
if(any(duplicated(df))){
cat("Duplicated rows! Keeping the first instance only.\n")
df = df[!duplicated(df), ]
rownames( df ) <- NULL
df = df %>% column_to_rownames("feature_id")
}else{
rownames( df ) <- NULL
df = df %>% column_to_rownames("feature_id")
}
}
paternsToRemove = c("^.+_environmental.+|environmental_.+|uncultured_.+|_sp\\..+|_sp.|_sp.+| sp\\..+| sp.| sp.+|_\\(.+|^.+_metagenome|_cf.")
df = df %>% mutate_all(list(~str_replace(.,paternsToRemove, ""))) %>% mutate_all(list(~na_if(.,"")))
if("species" %in% colnames(df)){
df$Species = paste0(sapply(strsplit(df$species,"_"), `[`, 1)," ", sapply(strsplit(df$species,"_"), `[`, 2))
}
df = df %>% mutate_all(list(~str_replace(.,"NA NA| NA", ""))) %>% mutate(across(everything(), gsub, pattern = "_", replacement = " ")) %>% mutate_all(list(~na_if(.,"")))
ranks_indexes = which(colnames(df) %ni% c("otu","otus","asv","asvs","feature_id","feature.id","nR"))
non_taxo_ranks = c("otu","otus","asv","asvs","feature_id","feature.id","nR")
rpt_indexes = max.col(!is.na(df[ranks_indexes]), "last")
taxa = unlist(lapply(1:length(rpt_indexes), function(x) df[x, rpt_indexes[x]]))
res_df = data.frame("feature_id" = rownames(df), "rpt_indexes" = rpt_indexes, "taxa" = taxa)
res_df$id = getId(taxa = res_df$taxa, sqlFile = sqlFile, onlyScientific = TRUE)
r = 1
# Deals with NA ids
while (r<length(ranks_indexes) & any(is.na(res_df$id))) {
df_temp = df[which(is.na(res_df$id)),]
res_df_temp = res_df[which(is.na(res_df$id)),]
rpt_indexes = max.col(!is.na(df_temp[colnames(df_temp)%ni%non_taxo_ranks]), "last") - r
rpt_indexes = pmax(rpt_indexes,1) # makes sure to have no negative or 0 values
taxa = unlist(lapply(1:length(rpt_indexes), function(x) df_temp[x, rpt_indexes[x]]))
res_df_temp = data.frame("feature_id" = rownames(df_temp), "rpt_indexes" = rpt_indexes, "taxa" = taxa)
id = getId(taxa = res_df_temp$taxa, sqlFile = sqlFile, onlyScientific = TRUE)
res_df[which(is.na(res_df$id)),]$id = ifelse(!is.na(id),id,"")
r = r + 1
}
# Deals with multiple ids
n = 1
number_ids = max(str_count(res_df$id, pattern = ","),na.rm = T) + 1
while (n<=number_ids & any(str_detect(res_df$id, ",", negate = FALSE))) {
df_temp = df[which(str_detect(res_df$id, ",", negate = FALSE)),]
res_df_temp = res_df[which(str_detect(res_df$id, ",", negate = FALSE)),]
rpt_indexes = max.col(!is.na(df_temp[colnames(df_temp)%ni%non_taxo_ranks]), "last") - 1
rpt_indexes = pmax(rpt_indexes,1) # makes sure to have no negative or 0 values
res_df_temp$p_taxa = unlist(lapply(1:length(rpt_indexes), function(x) df_temp[x, rpt_indexes[x]]))
taxa = unlist(lapply(1:length(rpt_indexes), function(x) df_temp[x, rpt_indexes[x]]))
test = getTaxonomy(res_df_temp$id %>% strsplit( "," ) %>% sapply( "[", n ), sqlFile, desiredTaxa = ranks) %>% as.data.frame()
for (i in 1:nrow(res_df_temp)) {
res_df_temp$id[i] = ifelse(res_df_temp$p_taxa[i] %in% test[i,], res_df_temp$id[i] %>% strsplit( "," ) %>% sapply( "[", n ),res_df_temp$id[i])
}
res_df[which(str_detect(res_df$id, ",", negate = FALSE)),]$id = res_df_temp$id
length(res_df[which(str_detect(res_df$id, ",", negate = FALSE)),]$id)
n = n + 1
number_ids = max(str_count(res_df$id, pattern = ","),na.rm = T) #####
}
#length(res_df[which(str_detect(res_df$id, ",", negate = FALSE)),]$id)
# Deals with multiple ids again but at higher level
n = 1
number_ids = max(str_count(res_df$id, pattern = ","),na.rm = T) + 1
if(!is.na(any(str_detect(res_df$id, ",", negate = FALSE)))){
while (n<=number_ids & any(str_detect(res_df$id, ",", negate = FALSE))) {
df_temp = df[which(str_detect(res_df$id, ",", negate = FALSE)),]
res_df_temp = res_df[which(str_detect(res_df$id,",", negate = FALSE)),]
rpt_indexes = max.col(!is.na(df_temp[colnames(df_temp)%ni%non_taxo_ranks]), "last") - 2
rpt_indexes = pmax(rpt_indexes,1) # makes sure to have no negative or 0 values
res_df_temp$p_taxa = unlist(lapply(1:length(rpt_indexes), function(x) df_temp[x, rpt_indexes[x]]))
taxa = unlist(lapply(1:length(rpt_indexes), function(x) df_temp[x, rpt_indexes[x]]))
test = getTaxonomy(res_df_temp$id %>% strsplit( "," ) %>% sapply( "[", n ), sqlFile, desiredTaxa = ranks) %>% as.data.frame()
for (i in 1:nrow(res_df_temp)) {
res_df_temp$id[i] = ifelse(res_df_temp$p_taxa[i] %in% test[i,], res_df_temp$id[i] %>% strsplit( "," ) %>% sapply( "[", n ),res_df_temp$id[i])
}
res_df[which(str_detect(res_df$id, ",", negate = FALSE)),]$id = res_df_temp$id
length(res_df[which(str_detect(res_df$id, ",", negate = FALSE)),]$id)
n = n + 1
}
}
res_df[ranks] = getTaxonomy(res_df$id, sqlFile, desiredTaxa = str_to_lower(ranks))
res_df = res_df[,colnames(res_df) %in% c(ranks,non_taxo_ranks)]
res_df$superkingdom = res_df$superkingdom %>% replace_na("Unknown")
res_df = res_df %>% column_to_rownames("feature_id")
res_df=cbind(res_df,df[,colnames(df) %in% non_taxo_ranks,drop = FALSE])
if(keepSAR & ("kingdom" %in% ranks)){
index = which(Reduce(`|`, lapply(df[-1], grepl, pattern="SAR")))
if(length(index)>0){
res_df[index,]$kingdom = "SAR"
}
}
if("phyloseq" %in% class(obj)){
obj@tax_table@.Data = res_df %>% as.matrix()
return(obj)
}else{
return(res_df %>% rownames_to_column("feature_id"))
}
}
consensus_taxo = taxo_merge_v2(
df_list = list(insect,
blastn),
sqlFile = "/Users/olivierlaroche/Dropbox/R_scripts_N_bioinfo/Building_packages/accessionTaxa.sql",
ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"),
keepSAR = F)
consensus_taxo %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastnold = fread("~/Desktop/COI/blastn_taxo_assingment.csv")
insect %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastn %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastnold %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastn %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastnold %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
consensus_taxo %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
View(consensus_taxo)
View(insect)
head(insect)
is.na(head(insect))
taxo_assingment_summary = function(df, ranks){
df = df %>% as.data.table()
df <- na_if(df, '')
df$nRb = rowSums(is.na(df[,..ranks] ) | df[,..ranks] == "")
temp_summary = df %>% dplyr::summarise(mean = round(mean(nRb),2), sd = round(sd(nRb),2))
cat("\nMean assigned taxonomic ranks: ",temp_summary$mean %>% as.numeric(),"\nStandard deviation: ",temp_summary$sd %>% as.numeric(),"\n\n")
}
insect %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
insect$phylum[1:10]
df=insect
df = df %>% as.data.table()
df <- na_if(df, '')
View(df)
df$nRb = rowSums(is.na(df[,..ranks] ) | df[,..ranks] == "")
df$nRb = rowSums(is.na(df[,..ranks] ) | df[,..ranks] == "")
df$nRb = rowSums(is.na(df[,ranks] ) | df[,ranks] == "")
df$nRb = rowSums(is.na(df[,ranks] ) | df[,ranks] == "")
df$nRb = rowSums(is.na(df[,..ranks] ) | df[,..ranks] == "")
df$nRb = rowSums(is.na(df %>% dplyr::select(ranks)) | df %>% dplyr::select(ranks) == "")
ranks
ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species")
df$nRb = rowSums(is.na(df %>% dplyr::select(ranks)) | df %>% dplyr::select(ranks) == "")
taxo_assingment_summary = function(df, ranks){
df = df %>% as.data.table()
df <- na_if(df, '')
df$nRb = rowSums(is.na(df %>% dplyr::select(ranks)) | df %>% dplyr::select(ranks) == "")
temp_summary = df %>% dplyr::summarise(mean = round(mean(nRb),2), sd = round(sd(nRb),2))
cat("\nMean assigned taxonomic ranks: ",temp_summary$mean %>% as.numeric(),"\nStandard deviation: ",temp_summary$sd %>% as.numeric(),"\n\n")
}
insect %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastn %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastnold %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
consensus_taxo %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
taxo_assingment_summary = function(df, ranks){
df = df %>%
as.data.table() %>%
na_if('') %>%
df$nRb = rowSums(is.na(df %>% dplyr::select(ranks)) | df %>% dplyr::select(ranks) == "")
temp_summary = df %>% dplyr::summarise(mean = round(mean(nRb),2), sd = round(sd(nRb),2))
cat("\nMean assigned taxonomic ranks: ",temp_summary$mean %>% as.numeric(),"\nStandard deviation: ",temp_summary$sd %>% as.numeric(),"\n\n")
}
df = df %>%
as.data.table() %>%
na_if('') %>%
df$nRb = rowSums(is.na(df %>% dplyr::select(ranks)) | df %>% dplyr::select(ranks) == "")
df = df %>%
as.data.table() %>%
na_if('')
taxo_assingment_summary = function(df, ranks){
df = df %>%
as.data.table() %>%
na_if('')
df$nRb = rowSums(is.na(df %>% dplyr::select(ranks)) | df %>% dplyr::select(ranks) == "")
temp_summary = df %>% dplyr::summarise(mean = round(mean(nRb),2), sd = round(sd(nRb),2))
cat("\nMean assigned taxonomic ranks: ",temp_summary$mean %>% as.numeric(),"\nStandard deviation: ",temp_summary$sd %>% as.numeric(),"\n\n")
}
taxo_assingment_summary = function(df, ranks){
df = df %>%
as.data.table() %>%
na_if('')
df$nRb = rowSums(is.na(df %>% dplyr::select(ranks)) | df %>% dplyr::select(ranks) == "")
temp_summary = df %>% dplyr::summarise(mean = round(mean(nRb),2), sd = round(sd(nRb),2))
cat("\nMean assigned taxonomic ranks: ",temp_summary$mean %>% as.numeric(),"\nStandard deviation: ",temp_summary$sd %>% as.numeric(),"\n\n")
}
insect %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastn %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
df$nRb = rowSums(is.na(df %>% dplyr::select(ranks)))
df$nRb = length(ranks) - rowSums(is.na(df %>% dplyr::select(ranks)))
taxo_assingment_summary = function(df, ranks){
df = df %>%
as.data.table() %>%
na_if('')
df$nRb = length(ranks) - rowSums(is.na(df %>% dplyr::select(ranks)))
temp_summary = df %>% dplyr::summarise(mean = round(mean(nRb),2), sd = round(sd(nRb),2))
cat("\nMean assigned taxonomic ranks: ",temp_summary$mean %>% as.numeric(),"\nStandard deviation: ",temp_summary$sd %>% as.numeric(),"\n\n")
}
insect %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastn %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastnold %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
consensus_taxo %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
taxo_assingment_summary = function(df, ranks){
df = df %>%
as.data.table() %>%
na_if('')
df$nRb = length(ranks) - rowSums(is.na(df %>% dplyr::select(ranks)))
temp_summary = df %>% dplyr::summarise(mean = round(mean(nRb),2), sd = round(sd(nRb),2))
cat("\nMean assigned taxonomic ranks: ",temp_summary$mean %>% as.numeric(),"\nStandard deviation: ",temp_summary$sd %>% as.numeric(),"\n\n")
}
pr2 = fread("~/Desktop/18S/pr2_taxonomy.csv") %>% dplyr::mutate(feature_id = openssl::md5(feature_id))
silva = fread("~/Desktop/18S/silva_taxonomy.csv") %>% dplyr::mutate(feature_id = openssl::md5(feature_id))
blastn = fread("~/Desktop/18S/blastn_taxo_assingment_v2.csv")
pr2 %>% taxo_assingment_summary(ranks = c("Kingdom", "Supergroup", "Division", "Class", "Order", "Family", "Genus", "Species"))
silva %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastn %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
consensus_taxo = fread("/Users/olivierlaroche/Library/CloudStorage/OneDrive-Cawthron/TMC/Gabby/18S/consensus_taxonomy.csv")
library(biohelper)
taxo_assingment_summary = function(df, ranks){
df = df %>%
as.data.table() %>%
na_if('')
df$nRb = length(ranks) - rowSums(is.na(df %>% dplyr::select(ranks)))
temp_summary = df %>% dplyr::summarise(mean = round(mean(nRb),2), sd = round(sd(nRb),2))
cat("\nMean assigned taxonomic ranks: ",temp_summary$mean %>% as.numeric(),"\nStandard deviation: ",temp_summary$sd %>% as.numeric(),"\n\n")
}
pr2 = fread("~/Desktop/18S/pr2_taxonomy.csv") %>% dplyr::mutate(feature_id = openssl::md5(feature_id))
silva = fread("~/Desktop/18S/silva_taxonomy.csv") %>% dplyr::mutate(feature_id = openssl::md5(feature_id))
blastn = fread("~/Desktop/18S/blastn_taxo_assingment_v2.csv")
consensus_taxo = taxo_merge_v2(
df_list = list(silva,
blastn,
pr2),
sqlFile = "/Users/olivierlaroche/Dropbox/R_scripts_N_bioinfo/Building_packages/accessionTaxa.sql",
ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"),
keepSAR = F)
write.csv(x = consensus_taxo, file = "/Users/olivierlaroche/Library/CloudStorage/OneDrive-Cawthron/TMC/Gabby/18S/consensus_taxonomy.csv",row.names = F)
consensus_taxo = fread("/Users/olivierlaroche/Library/CloudStorage/OneDrive-Cawthron/TMC/Gabby/18S/consensus_taxonomy.csv")
pr2 %>% taxo_assingment_summary(ranks = c("Kingdom", "Supergroup", "Division", "Class", "Order", "Family", "Genus", "Species"))
silva %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastn %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
consensus_taxo %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
pr2 %>% taxo_assingment_summary(ranks = c("Kingdom", "Supergroup", "Division", "Class", "Order", "Family", "Genus", "Species"))
pr2 %>% taxo_assingment_summary(ranks = c("Kingdom", "Supergroup", "Division", "Class", "Order", "Family", "Genus", "Species"))
silva %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastn %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
consensus_taxo %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
View(pr2)
View(consensus_taxo)
View(biohelper::blastn_taxo_assignment())
View(biohelper::blastn_taxo_assignment)
insect %>%
taxo_normalisation(sqlFile = "/Users/olivierlaroche/Dropbox/R_scripts_N_bioinfo/Building_packages/accessionTaxa.sql",
ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"),
keepSAR = F) %>%
taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastn %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastnold %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
consensus_taxo %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastn %>%
taxo_normalisation(sqlFile = "/Users/olivierlaroche/Dropbox/R_scripts_N_bioinfo/Building_packages/accessionTaxa.sql",
ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"),
keepSAR = F) %>%
taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
consensus_taxo %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
pr2 %>% taxo_normalisation(sqlFile = "/Users/olivierlaroche/Dropbox/R_scripts_N_bioinfo/Building_packages/accessionTaxa.sql",
ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"),
keepSAR = F) %>%
taxo_assingment_summary(ranks = c("Kingdom", "Supergroup", "Division", "Class", "Order", "Family", "Genus", "Species"))
pr2 %>% taxo_normalisation(sqlFile = "/Users/olivierlaroche/Dropbox/R_scripts_N_bioinfo/Building_packages/accessionTaxa.sql",
ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"),
keepSAR = F) %>%
taxo_assingment_summary(ranks = c("Kingdom", "Supergroup", "Division", "Class", "Order", "Family", "Genus", "Species"))
pr2 %>% taxo_normalisation(sqlFile = "/Users/olivierlaroche/Dropbox/R_scripts_N_bioinfo/Building_packages/accessionTaxa.sql",
ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"),
keepSAR = F) %>%
taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
silva %>% taxo_normalisation(sqlFile = "/Users/olivierlaroche/Dropbox/R_scripts_N_bioinfo/Building_packages/accessionTaxa.sql",
ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"),
keepSAR = F)%>%
taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastn %>%   taxo_normalisation(sqlFile = "/Users/olivierlaroche/Dropbox/R_scripts_N_bioinfo/Building_packages/accessionTaxa.sql",
ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"),
keepSAR = F)%>%
taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
consensus_taxo %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
df = df %>%
as.data.table() %>%
na_if('')
library(biohelper)
taxo_assingment_summary = function(df, ranks){
df = df %>%
as.data.table() %>%
na_if('')
df$nRb = length(ranks) - rowSums(is.na(df %>% dplyr::select(ranks)))
temp_summary = df %>% dplyr::summarise(mean = round(mean(nRb),2), sd = round(sd(nRb),2))
cat("\nMean assigned taxonomic ranks: ",temp_summary$mean %>% as.numeric(),"\nStandard deviation: ",temp_summary$sd %>% as.numeric(),"\n\n")
}
insect = fread("~/Desktop/COI/taxo_insect.csv") %>% dplyr::select(-c(taxID,taxon,rank,score))
blastn = fread("~/Desktop/COI/blastn_taxo_assingment_v2.csv")
blastnold = fread("~/Desktop/COI/blastn_taxo_assingment.csv")
consensus_taxo = taxo_merge_v2(
df_list = list(insect,
blastn),
sqlFile = "/Users/olivierlaroche/Dropbox/R_scripts_N_bioinfo/Building_packages/accessionTaxa.sql",
ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"),
keepSAR = F)
write.csv(x = consensus_taxo, file = "/Users/olivierlaroche/Library/CloudStorage/OneDrive-Cawthron/TMC/Gabby/COI/consensus_taxonomy.csv",row.names = F)
consensus_taxo = fread("/Users/olivierlaroche/Library/CloudStorage/OneDrive-Cawthron/TMC/Gabby/COI/consensus_taxonomy.csv")
insect %>%
taxo_normalisation(sqlFile = "/Users/olivierlaroche/Dropbox/R_scripts_N_bioinfo/Building_packages/accessionTaxa.sql",
ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"),
keepSAR = F) %>%
taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastn %>%
taxo_normalisation(sqlFile = "/Users/olivierlaroche/Dropbox/R_scripts_N_bioinfo/Building_packages/accessionTaxa.sql",
ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"),
keepSAR = F) %>%
taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
consensus_taxo %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
insect %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
blastn %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
consensus_taxo %>% taxo_assingment_summary(ranks = c("superkingdom", "kingdom", "phylum", "class", "order", "family", "genus", "species"))
ps_test_data@tax_table %>% as.data.frame()
ps_test_data@tax_table %>% as.data.frame()->x
View(x)
